Zedpush Api

Note
----------------------------------------------------------------------------------------------------------------------
Base Request URL :http://localhost/zedpush/public/api/v1/

Type of status messages
-------------------------------------------------------------
	-100 Error
	-102 Validation Error
	-200 Successful
	-201 Unauthorized Update/Delete/View
	-202 login not suceessfull/invalid email id/ invalid username

Every Request consist of a parameter called as 'syskey' an alphanumeric sequence to identify users.	
---------------------------------------------------------------------------------------------------

If a required parameter is empty send value 'none'
	
Response is Generally Structured as 
-------------------------------------------------------------
 - Response Dummy Format
 
		{
		['status'=> 100/102/200/201', ------it can get any of the status
		 'result'=>
			[ //here results are placed in individual objects ]
		 'message'=>['Shows a message about operation']
		]
		}
-------------------------------------------------------------------------------------------------------------------------
*****************************************************Offers Section*****************************************************
-------------------------------------------------------------------------------------------------------------------------		
    1.POST offers/create
	Parameters
		-maintitle  ( An identifier title for creator) //Required
		-offertitle //Required
		-offerdesc
		-offerprice
		-contact
		-expires_on
		-image
		-image1
		-image2
		-image3
		
	Response
		'result'=>'null'
	---------------------------------------------------------	

	2.POST offers/update
	Parameters
		
		-offertitle //Required
		-offerdesc //Required
		-offerprice //Required
		-contact //Required
		-id //Required
		-expires_on //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------
	3.POST offers/view_update
	Parameters
		-id //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------

	
		
	4.POST offers/add-gallery  //used when gallery setup later
	   Parameters	
		-image
		-image1
		-image2
		-image3
		-id
		Response
		'result'=>'null'

	-------------------------------------------------------------
	
	5.POST offers/delete
	Parameters
		-id //Required
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	6.POST offers/total
	Parameters
		
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	7.POST offers/details
	Parameters
		-id //Required
	Response
		'result'=>['details'=>//returns all fields of database offer_campagin,gallery ]	
	
	-------------------------------------------------------------
	
	
	8.POST offers/all
	Parameters
		-
	Response
		'result'=>['list'=>['id','base_title','views','pic_name1','created_at','updated_at'] ]	

	-------------------------------------------------------------

	
	9.POST offers/all-by-limit
	Parameters
		-
		-offset //required
		-limit //required
	Response
		'result'=>['list'=>['id','base_title','views','pic_name1','created_at','updated_at'] ]	
	

	-------------------------------------------------------------
		
	10.	POST offers/campaign-status
		Parameters	
			-
		Response
			-'result'=>['status'=>['id','base_title','views','created_at','updated_at']]
			
	
	------------------------------------------------------------------------------------------------------------------------------------------------------
	**************************************************************category section***************************************************************************
	------------------------------------------------------------------------------------------------------------------------------------------------------
	
	1. POST category/create
		Parameters
			-catname ( Category Name )
			-parent (ID of the parent category,if not applicable send none )
		Response
			-'result'=>[]
	
	-------------------------------------------------------------
	
	2.  POST category/update
		Parameters
			-id
			-catname ( Category Name ) // required
			-parent //required
		Response
			-'result'=>[]	
	
	-------------------------------------------------------------
	
	3.  POST category/delete
		Parameters
			-id
			
		Response
			-'result'=>[]

	
	-------------------------------------------------------------
	
	
	4.  POST category/deep-delete  // used to delete all sales,category under a category 
		Parameters
			-id
			
		Response
			-'result'=>[]
	
	-------------------------------------------------------------
	
	5.  POST category/list
		Parameters
			-
		Response
		
		>list categories
			-result=>[
					'type'=>'categories'
					'list'=>['id', 'category_name', 'created_on']
					]
		> if there is no categories found
			-result=>[
					'type'=>'products'
					'list'=>['id','base_title','views','pic_name1','created_at','updated_at'
					]
					]
	-------------------------------------------------------------
		
	6.  POST category/next-list  // used when nested categories validate the result by checking type 
		Parameters
			-id
			
		Response
			>list categories
			-result=>[
					'type'=>'categories'
					'list'=>['id', 'category_name', 'created_on']
					]
		> if there is no categories found
			-result=>[
					'type'=>'products'
					'list'=>['id','base_title','views','pic_name1','created_at','updated_at'
					]
					]
	-------------------------------------------------------------				
	7.  POST category/total
		Parameters
			-id
			
		Response
			-'result'=>['count']			
			
	--------------------------------------------------------------------------------------------------------------------------------------------
    *********************************************************** sales section*******************************************************************
	--------------------------------------------------------------------------------------------------------------------------------------------
	1.POST sales/create
	Parameters
		-maintitle  ( An identifier title for creator) //Required
		-salestitle //Required
		-salesdesc
		-salesprice
		-contact
		-image
		-image1
		-image2
		-image3
		
	Response
		'result'=>'null'
	---------------------------------------------------------	

	2.POST sales/update
	Parameters
		
		-salestitle //Required
		-salesdesc //Required
		-salesprice //Required
		-contact //Required
		-id //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------
	3.POST sales/view_update
	Parameters
		-id //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------

	
		
	4.POST sales/add-gallery  //used when gallery setup later
	   Parameters	
		-image
		-image1
		-image2
		-image3
		-id
		Response
		'result'=>'null'

	-------------------------------------------------------------
	
	5.POST sales/delete
	Parameters
		-id //Required
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	6.POST sales/total
	Parameters
		
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	7.POST sales/details
	Parameters
		-id //Required
	Response
		'result'=>['details'=>//returns all fields of database sales_campagin,gallery ]	
	
	-------------------------------------------------------------
	8.POST sales/status-update
	Parameters
		-id //Required
		-status //numeric 1 or 0 used to set whether it need to show one home page results
	Response
		'result'=>[ ]	
	

	-------------------------------------------------------------

	
	9.POST sales/all-by-limit
	Parameters
		
		-offset //required
		-limit //required
	Response
		'result'=>['list'=>['id','base_title','views','pic_name1','created_at','updated_at'] ]	
	

	-------------------------------------------------------------
		
	10.	POST sales/campaign-status
		Parameters	
			-
		Response
			-'result'=>['status'=>['id','base_title','views','created_at','updated_at']]
	
	--------------------------------------------------------------------------------------------------------------------------------
	****************************************jobs section***************************************************************************
	-------------------------------------------------------------------------------------------------------------------------------
	1.POST jobs/create
	Parameters
		-maintitle  ( An identifier title for creator) //Required
		-jobtitle //Required
		-jobdesc
		-jobprice
		-contact
		-expires_on
		-image
		-image1
		-image2
		-image3
		
	Response
		'result'=>'null'
	---------------------------------------------------------	

	2.POST jobs/update
	Parameters
		
		-jobtitle //Required
		-jobdesc //Required
		-jobprice //Required
		-contact //Required
		-id //Required
		-expires_on //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------
	3.POST jobs/view_update
	Parameters
		-id //Required
	Response
		'result'=>'null'	
	
	-------------------------------------------------------------

	
		
	4.POST jobs/add-gallery  //used when gallery setup later
	   Parameters	
		-image
		-image1
		-image2
		-image3
		-id
		Response
		'result'=>'null'

	-------------------------------------------------------------
	
	5.POST jobs/delete
	Parameters
		-id //Required
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	6.POST jobs/total
	Parameters
		
	Response
		'result'=>['deleted_id'=>'15']
	
	
	-------------------------------------------------------------
	
	7.POST jobs/details
	Parameters
		-id //Required
	Response
		'result'=>['details'=>//returns all fields of database job_campagin,gallery ]	
	
	-------------------------------------------------------------
	
	
	8.POST jobs/all
	Parameters
		-
	Response
		'result'=>['list'=>['id','base_title','views','pic_name1','created_at','updated_at'] ]	

	-------------------------------------------------------------

	
	9.POST jobs/all-by-limit
	Parameters
		-
		-offset //required
		-limit //required
	Response
		'result'=>['list'=>['id','base_title','views','pic_name1','created_at','updated_at'] ]	
	

	-------------------------------------------------------------
		
	10.	POST jobs/campaign-status
		Parameters	
			-
		Response
			-'result'=>['status'=>['id','base_title','views','created_at','updated_at']]
			
	-------------------------------------------------------------------------------------------------------------------------------------
	***************************************************Testimonials**********************************************************************
	-------------------------------------------------------------------------------------------------------------------------------------
	1.POST testimonials/create
		parameters
			-name
			-message
			-rating
			-hidden
			-image
			
		Response
			-'result'=>[ ]
	2.POST testimonials/create
		parameters
			-name
			-message
			-rating
			-hidden
			-id
			
		Response
			-'result'=>[ ]
	3.POST testimonials/update-image
		parameters
			-image
			-id		
		Response
			-'result'=>[ ]		
			
	4.POST testimonials/delete
		parameters
			-id
			
		Response
			-'result'=>[ ]		
	5.POST testimonials/details
		parameters
			-id
			
		Response
			-'result'=>['list'=>[//all details get as an array],'count'=>'']
	6..POST testimonials/list //to get all testimonials
		parameters
			-
			
		Response
			-'result'=>['list'=>[//all details get as an array]]
	
	7.POST testimonials/recent //to get recent testimonials
		parameters
			-
			
		Response
			-'result'=>['list'=>[//all details get as an array],'count'=>'']
			
	-----------------------------------------------------------------------------------------------------------------------
	**************************************************** Gallery **********************************************************
	-----------------------------------------------------------------------------------------------------------------------
	Note:// gallery functions  are already implemented, you can use if you want additional requirements
	
	1.POST gallery/create
		parameters
			-image
			-image1
			-image2
			-image3
			
		Response
			-'result'=>[ ]	
	
	2.POST gallery/update
		parameters
		    -id
			-column // specify number,say 1,2,3,4 of the image colunm in database
			-image
			-image1
			-image2
			-image3
			
		Response
			-'result'=>[ ]	
	
	3.POST gallery/delete
		Parameters
			-id
		Response
			-'result'=>[]
	------------------------------------------------------------------------------------------------------------------------
    ***************************************	Contact Us Section**************************************************************
	------------------------------------------------------------------------------------------------------------------------
	1.POST contact-us/create
		parameters
			-name
			-email
			-mobno
			-message
			
		Response
			-'result'=>[ ]	
			
	2.POST contact-us/view
		parameters
			-id
			
		Response
			-'result'=>[ 'list'=>'']
	
	3.POST contact-us/list
		parameters
			-
			
		Response
			-'result'=>['list'=>'' ]	
	4.POST contact-us/all-by-limit
		parameters
			-limit
			-offset
			
		Response
			-'result'=>['list'=>'' ]			
	5.POST contact-us/delete
		parameters
			-id
			
		Response
			-'result'=>[ 'list'=>'']
    -----------------------------------------------------------------------------------------------------------------------
    ***********************************Home Page Management****************************************************************
    -----------------------------------------------------------------------------------------------------------------------
    1.POST home/logo-title
	Parameters
		-title // logo title of the page
	Response
		-'result'=>[ ]	
	
	2.POST home/gallery
	Parameters
		-image
		-image1
		-image2
		-image3
		
	Response
		-'result'=>[ ]		
		
	
	3.POST home/tag // used to change the name product/service to desired
	Parameters
		-text //enter desired text
	Response
		-'result'=>[ ]	
		
	
	4.POST home/about-us
	Parameters
		-text //enter desired text
	Response
		-'result'=>[ ]		
	
	
	5.POST home/email
	Parameters
		-text //enter desired email seperated by commas
	Response
		-'result'=>[ ]	
	
	
	6.POST home/address
	Parameters
		-text //enter desired address
	Response
		-'result'=>[ ]	
	
	7.POST home/contact
	Parameters
		-text  //enter desired contact numbers separated by commas
	Response
		-'result'=>[ ]		
		
	8.POST home/details	
		-
	Response
		-'result'=>['detaials'=>[ //entire home array] ]	
		
	--------------------------------------------------------------------------------------------------------------------
    **********************************************Users*****************************************************************
    --------------------------------------------------------------------------------------------------------------------
	
	1.POST users/create
	Parameters
		-fname
		-email
		-mobno
		-username
		-password
	Response
		-'result'=>[ ]		
	
	2.POST users/shop-update
	Parameters
		-country_id
		-location_id
		-logo
	Response
		-'result'=>[ ]
	
	3.POST users/info-update
	Parameters
		-name
		-email
		-mobno
		-username
		-password
		
		
	Response
		-'result'=>[ ]
    
	4.POST users/username-update
	Parameters
		-username
	Response
		-'result'=>[ ]		
	
	5.POST users/password-update
	Parameters
		-pass1
		-pass2
	Response
		-'result'=>[ ]
	
	6.POST users/login
	Parameters
		-username
		-password
	Response
		-'result'=>['data'=>'get all user details' ]	
	
	7.POST users/check-username
	Parameters
		-username
	Response
		-'result'=>[ ]	
	
	8.	7.POST users/check-email
	Parameters
		-email
	Response
		-'result'=>[ ]	'
    
	9.	7.POST users/countries
	Parameters
		
	Response
		-'result'=>[ ]			
	
	10.	7.POST users/details
	Parameters
		-
	Response
		-'result'=>['details'=>'all details of the user']		
----------------------------------------------------------------------------------------------------------------------